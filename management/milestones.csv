MilestoneID,                Dependencies,           EstimatedEffort,    Lead,       Completed,                                  Description,
DeriveManagementPlan,       nil,2,                  yhl15,      this   ,                                    Derive rough plan of project and complete milestones.csv and schedule.csv,
,,,,,,
BasicCLexer,                LexingLab,3,                  vgr16,      dc5e78739a4ef1346f6064c36f1c402d08e2bafb,   Consider structure of C lexer and begin lexing simple C code and most basic data types and keywords,
,,,,,,
BasicCParser,               BasicCLexer,6,                  yhl15,      d8d5394c135d452407548aa8544416fc369775bc,   Take Lexed Tokens as input directly through to the end of Parsing and produce an AST and print this AST,
,,,,,,
Script_Tests_Lexer_parser,  BasicCParser,2,                  vgr16,      dba5f4b9dcf3f3e01ea7bda8cd3e20c8dc34c30f,   Write script for testbench to automate tests to allow more expressions of code to be parsed accurately without destroying whats working,
,,,,,,
Grammar_Hierarchy,          BasicCParser,8,                  vgr16,      388af8f99ff563efcc877570bcfbb71e5a67ad5e,   Consider and implement a neater and more accurate grammar hierarchy, expand it with more test cases to verify
,,,,,,
Expand_Lexicals_Grammar,    Grammar_Hierarchy,8,                  yhl15,      92f829f389913afc42a345f699dbfc7607fa7d21,   Use somewhat well designed hierarchy to introduce more tokens and parse them correctly,
,,,,,,
DecentPythonTranslator,     Expand_Lexicals_Grammar,7,                  yhl15,      beac046e4e3686e6ef6bb23371a4eec38734d66f,   Go through AST from parsing stage to translate from to python, have it work for 80%
,,,,,,
TestCtoPythonTranslator,    DecentPythonTranslator,6,                  vgr16,      beac046e4e3686e6ef6bb23371a4eec38734d66f,   Develop testbench and generate tests as we aim to translate 100% of the subset of C defined in specifications,
,,,,,,
CtoPythonTranslator,        TestCtoPythonTranslator,3,                  yhl15,      4a75f9809f6f75c28478f24a917655214b5dfb2f,   Translate to python 100% of the subset of C provided and verify with testcases completed,                                         
,,,,,,
PlanCodeGenStructure,       CodeGenLab,4,                  vgr16,      5c80e7e7c88343b60c2fb7492265c204ea0f01b9,   Plan Structure for Code Gen from AST to Mips Asm and have basic design layout,                                                
,,,,,,
BasicCodeGen,               PlanCodeGenStructure,8,                  vgr16,      1af0289eead3ce8d80c704123154f293c5780b7b,   Have codegen working for 30% of functionality(Most Statement,expressions of int type),
,,,,,,
Testsuiteforcomplier,       BasicCodeGen,4,                  yhl15,      cfd01c72773c1da2be1e4848a626a3aefd9e72f1,   Complete structure for testsuite and test the codegen with it simultaneously while developing codegen,
,,,,,,
NearCompletedCParser,       BasicCodeGen,8,                  vgr16,      25e1cc2aa60f0601f001b5bc306fc512e033b8d9,   Have our parser Parse almost all the statements thats valid in c89 and compiling it against actual c code,
,,,,,,
CodegenArrays,         NearCompletedCParser,8,                  vgr16,5423624a16b78b006f602f4a4c8f1eb5f1954b55,   Codegen working for 40% of functionality to be implemented( arrays and all statements and expr for int type),
,,,,,,
CodegenPointers,              CodegenArrays,8,                  vgr16,e2775816de030e9f58e6a7612129dfc51159b568, Codegen to work for 50% of functionality to be implemented (pointers for int type),
,,,,,,
CodegenMultTypeStructure,CodegenPointers,8,vgr16,35fc87254a6ea403ec1f0c29e040c9f0bcc0f6cf,                                                 Codegen to work for 60% of functionality to be implemented(Basic Structure for Multiple types),
,,,,,,
CodegenMultTypeBasic,CodegenMultTypeStructure,8,yhl15,8c0554bf8ddd1291fe6f5777ecde79dca3454fac,                                                 Codegen to work for 70% of functionality to be implemented(Some Expressions for Multiple types),
,,,,,,
CodegenMultTypeExpr,CodegenMultTypeBasic,8,yhl15,,                                                 Codegen to work for 80% of functionality to be implemented(Complete Expressions for Multiple types),
,,,,,,
NearCompleteCodegen,CodegenMultTypeExpr,8,                  yhl15,,                                                 Get codegen to implement 90% of functionality using testbench as verification,
,,,,,,
FinishCodegen,              NearCompleteCodegen,8,                  vgr16,,                                                 Complete codegen for mips asm by working hand in hand with the testbench for it,
,,,,,,
TieLooseEnds,               FinishCodegen,3,                  vgr16,,                                                 Tie up loose ends and edge cases if any,
